{
"version":3,
"file":"module$node_modules$marked$src$Renderer.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/marked/src/Renderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$marked$src$Renderer\"] = function(global,require,module,exports) {\nconst { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  }\n\n  html(html) {\n    return html;\n  }\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  }\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  }\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  }\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  }\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","defaults","cleanUrl","escape","constructor","options","code","infostring","escaped","lang","match","highlight","out","langPrefix","blockquote","quote","html","heading","text","level","raw","slugger","headerIds","headerPrefix","slug","hr","xhtml","list","body","ordered","start","type","startatt","listitem","checkbox","checked","paragraph","table","header","tablerow","content","tablecell","flags","align","tag","strong","em","codespan","br","del","link","href","title","sanitize","baseUrl","image"]
}
