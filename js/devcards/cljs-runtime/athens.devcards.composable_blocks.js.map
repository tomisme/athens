{"version":3,"sources":["athens/devcards/composable_blocks.cljs"],"mappings":"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","names":["devcards.core/register-card","devcards.core/card-base","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","devcards.core/assert-options-map","cljs.core/deref","athens.devcards.composable-blocks/get-block","uid","G__60479","G__60480","G__60481","posh.reagent/pull","athens.db/dsdb","athens.devcards.composable-blocks/add-block!","s","new-uid","athens.util/gen-block-uid","G__60482","re-frame.core/dispatch-sync","js/athens","js/athens.devcards","js/athens.devcards.composable-blocks","js/athens.devcards.composable-blocks.t_athens$devcards$composable_blocks60483","athens.devcards.composable-blocks/t_athens$devcards$composable_blocks60483","_60485","meta60484","cljs.core/PROTOCOL_SENTINEL","this__42228__auto__","devcard-opts__42229__auto__","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","v__42247__auto__","cljs.core/fn?","data-atom__42248__auto__","owner__42249__auto__","reagent.core/as-element","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","athens.devcards.composable-blocks/->t_athens$devcards$composable_blocks60483","athens.views.blocks/block-component","js/athens.devcards.composable-blocks.t_athens$devcards$composable_blocks60486","athens.devcards.composable-blocks/t_athens$devcards$composable_blocks60486","_60488","meta60487","athens.devcards.composable-blocks/->t_athens$devcards$composable_blocks60486","block","athens.db/get-block-document","athens.devcards.composable-blocks/normal-block-content","athens.devcards.composable-blocks/normal-block-uid","athens.devcards.composable-blocks/normal-embed-block-content","athens.devcards.composable-blocks/normal-embed-block-uid","athens.devcards.composable-blocks/normal-embed-block","js/athens.devcards.composable-blocks.t_athens$devcards$composable_blocks60489","athens.devcards.composable-blocks/t_athens$devcards$composable_blocks60489","_60491","meta60490","athens.devcards.composable-blocks/->t_athens$devcards$composable_blocks60489","athens.devcards.composable-blocks/todoer-block-content","athens.devcards.composable-blocks/todoer-block-uid","athens.devcards.composable-blocks/todoer-block","js/athens.devcards.composable-blocks.t_athens$devcards$composable_blocks60492","athens.devcards.composable-blocks/t_athens$devcards$composable_blocks60492","_60494","meta60493","athens.devcards.composable-blocks/->t_athens$devcards$composable_blocks60492","athens.devcards.composable-blocks/todoed-block-content","athens.devcards.composable-blocks/todoed-block-uid","athens.devcards.composable-blocks/todoed-block","js/athens.devcards.composable-blocks.t_athens$devcards$composable_blocks60495","athens.devcards.composable-blocks/t_athens$devcards$composable_blocks60495","_60497","meta60496","athens.devcards.composable-blocks/->t_athens$devcards$composable_blocks60495"],"sourcesContent":["(ns athens.devcards.composable-blocks\n  (:require\n    [athens.db :as db]\n    [athens.effects]\n    [athens.events]\n    [athens.util :refer [gen-block-uid]]\n    [athens.views.blocks :refer [block-component]]\n    [devcards.core :as devcards :refer [defcard defcard-rg]]\n    [posh.reagent :refer [pull]]\n    [re-frame.core :as rf]\n    #_[reagent.core :as rg]\n    #_[sci.core :as sci]))\n\n\n(defcard \"## Composable Blocks\")\n\n\n(defn get-block [uid]\n  @(pull db/dsdb '[*] [:block/uid uid]))\n\n\n(defn add-block! [s]\n  (let [new-uid (gen-block-uid)]\n    (rf/dispatch-sync [:transact [{:db/id -1\n                                   :block/children []\n                                   :block/uid new-uid\n                                   :block/open false\n                                   :block/string s}]])\n    new-uid))\n\n\n(defcard-rg Block-4095\n  [block-component 4095])\n\n\n(defcard-rg checkbox-mockup\n  (let [block (db/get-block-document 4095)\n        s (:block/string block)]\n    [:<>\n     [:input {:type \"checkbox\"}]\n     [:span {:style {:margin-left 10}}\n      s]]))\n\n\n(def normal-block-content \"Alice\")\n(def normal-block-uid (add-block! normal-block-content))\n(defcard normal-block (get-block normal-block-uid))\n\n\n(def normal-embed-block-content\n  (str \"Hello, ((\" normal-block-uid \"))\"))\n(def normal-embed-block-uid (add-block! normal-embed-block-content))\n(def normal-embed-block (get-block normal-embed-block-uid))\n(defcard normal-embed-block normal-embed-block)\n(defcard-rg normal-embed-render\n  [block-component (:db/id normal-embed-block)])\n\n\n(def todoer-block-content\n  #_(let [{:keys [parent]} *1]\n      {:hiccup\n       [:<>\n        [:input {:type \"checkbox\"}]\n        [:span {:style {:margin-left 10}}\n         (:hiccup parent)]]})\n  \":sci (let [{:keys [parent]} *1]\n          {:hiccup\n           [:<>\n            [:input {:type \\\"checkbox\\\"}]\n            [:span {:style {:margin-left 10}}\n             (:hiccup parent)]]})\")\n(def todoer-block-uid (add-block! todoer-block-content))\n(def todoer-block (get-block todoer-block-uid))\n(defcard todoer-block todoer-block)\n(defcard-rg todoer-block-render\n  [block-component (:db/id todoer-block)])\n\n\n(def todoed-block-content (str \"((\" todoer-block-uid \")) collect eggs\"))\n(def todoed-block-uid (add-block! todoed-block-content))\n(def todoed-block (get-block todoed-block-uid))\n(defcard todoed-block todoed-block)\n(defcard-rg todoed-block-render\n  [block-component (:db/id todoed-block)])\n"]}