{"version":3,"sources":["athens/devcards/table.cljs"],"mappings":"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","names":["athens.devcards.db/-main","athens.devcards.table/date-string","x","G__52219","athens.style/+unknown-date","js/Date","athens.devcards.table/main-css","garden.core.css.cljs$core$IFn$_invoke$arity$variadic","athens.devcards.table/+text-align-left","athens.lib.dom.attributes.with_styles.cljs$core$IFn$_invoke$arity$1","athens.devcards.table/+text-align-right","athens.devcards.table/+width-100","athens.devcards.table/+link","athens.style/COLORS","devcards.core/register-card","devcards.core/card-base","js/athens","js/athens.devcards","js/athens.devcards.table","js/athens.devcards.table.t_athens$devcards$table52220","athens.devcards.table/t_athens$devcards$table52220","_52222","meta52221","cljs.core/PROTOCOL_SENTINEL","this__46861__auto__","devcard-opts__46862__auto__","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","v__46886__auto__","cljs.core/fn?","data-atom__46887__auto__","owner__46888__auto__","reagent.core/as-element","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","devcards.core/assert-options-map","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","athens.devcards.table/->t_athens$devcards$table52220","athens.style/style-guide-css","js/athens.devcards.table.t_athens$devcards$table52223","athens.devcards.table/t_athens$devcards$table52223","_52225","meta52224","athens.devcards.table/->t_athens$devcards$table52223","athens.devcards.table/table","page-eids","G__52227","G__52228","posh.reagent/q","athens.db/dsdb","pages","G__52229","G__52230","G__52231","cljs.core/deref","posh.reagent/pull-many","get-pages","cljs.core.take.cljs$core$IFn$_invoke$arity$2","iter__4582__auto__","s__52233","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__52235","cljs.core/chunk-buffer","i__52234","map__52236","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__52232","cljs.core/chunk-rest","map__52238","cljs.core/first","cljs.core/cons","cljs.core/rest","uid","title","modified","created","children","athens.lib.dom.attributes.with_attributes.cljs$core$IFn$_invoke$arity$variadic","athens.router/navigate-page","clojure.string.join.cljs$core$IFn$_invoke$arity$2","p1__52226#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","js/athens.devcards.table.t_athens$devcards$table52240","athens.devcards.table/t_athens$devcards$table52240","_52242","meta52241","athens.devcards.table/->t_athens$devcards$table52240","cljs.core/chunk-first"],"sourcesContent":["(ns athens.devcards.table\n  (:require\n    [athens.db :as db]\n    [athens.devcards.db :refer [-main]]\n    [athens.lib.dom.attributes :refer [with-styles with-attributes]]\n    [athens.router :refer [navigate-page]]\n    [athens.style :as style :refer [style-guide-css COLORS]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [devcards.core :refer [defcard-rg]]\n    [garden.core :refer [css]]\n    [posh.reagent :refer [pull-many q]]))\n\n\n(-main)\n\n\n(defn- date-string\n  [x]\n  (if (< x 1)\n    [:span (style/+unknown-date {}) \"(unknown date)\"]\n    (.toLocaleString  (js/Date. x))))\n\n\n(defn main-css\n  []\n  [:style (css [:.com-rigsomelight-devcards-container {:width \"90%\"}])])\n\n\n(def +text-align-left\n  (with-styles {:text-align \"left\"}))\n\n\n(def +text-align-right\n  (with-styles {:text-align \"right\"}))\n\n\n(def +width-100\n  (with-styles {:width \"100%\"}))\n\n\n(def +link\n  (with-styles {:color (:link-color COLORS) :cursor \"pointer\"}))\n\n\n(defcard-rg Import-Styles\n  [style-guide-css])\n\n\n(defcard-rg Modify-Devcards\n  \"Increase width to 90% for table\"\n  [main-css])\n\n\n(defn table\n  []\n  (let [page-eids (q '[:find [?e ...]\n                       :where\n                       [?e :node/title ?t]]\n                     db/dsdb)\n        pages (pull-many db/dsdb '[\"*\" {:block/children [:block/string] :limit 5}] @page-eids)\n        get-pages (take 10 @pages)]\n    [:table +width-100\n     [:thead\n      [:tr\n       [:th [:h5 +text-align-left \"Page\"]]\n       [:th [:h5 +text-align-left \"Body\"]]\n       [:th [:h5 +text-align-right \"Modified\"]]\n       [:th [:h5 +text-align-right \"Created\"]]]]\n     [:tbody\n      (for [{uid :block/uid\n             title :node/title\n             modified :edit/time\n             created :create/time\n             children :block/children} get-pages]\n        ^{:key uid}\n        [:tr\n         [:td\n          {:style {:height 24}}\n          [:h4 (with-attributes +link {:on-click #(navigate-page uid)}) title]]\n         [:td +text-align-left (clojure.string/join \" \" (map #(str \"\u2022 \" (:block/string %)) children))]\n         [:td +text-align-right (date-string modified)]\n         [:td +text-align-right (date-string created)]])]]))\n\n\n(defcard-rg Table\n  [table])\n\n"]}