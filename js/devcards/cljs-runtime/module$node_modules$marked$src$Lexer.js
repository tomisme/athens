shadow$provide.module$node_modules$marked$src$Lexer=function(global,require,module,exports){function smartypants(text){return text.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…")}function mangle(text){var out="",i,l=text.length;for(i=0;i<l;i++){var ch=text.charCodeAt(i);.5<Math.random()&&(ch="x"+ch.toString(16));out+="\x26#"+ch+";"}return out}var Tokenizer=require("module$node_modules$marked$src$Tokenizer"),
defaults=require("module$node_modules$marked$src$defaults").defaults;global=require("module$node_modules$marked$src$rules");var block=global.block,inline=global.inline,node_modules$marked$src$Lexer$classdecl$var1=function(options){this.tokens=[];this.tokens.links=Object.create(null);this.options=options||defaults;this.options.tokenizer=this.options.tokenizer||new Tokenizer;this.tokenizer=this.options.tokenizer;this.tokenizer.options=this.options;options={block:block.normal,inline:inline.normal};this.options.pedantic?
(options.block=block.pedantic,options.inline=inline.pedantic):this.options.gfm&&(options.block=block.gfm,options.inline=this.options.breaks?inline.breaks:inline.gfm);this.tokenizer.rules=options};node_modules$marked$src$Lexer$classdecl$var1.lex=function(src,options){return(new node_modules$marked$src$Lexer$classdecl$var1(options)).lex(src)};node_modules$marked$src$Lexer$classdecl$var1.prototype.lex=function(src){src=src.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ");this.blockTokens(src,this.tokens,
!0);this.inline(this.tokens);return this.tokens};node_modules$marked$src$Lexer$classdecl$var1.prototype.blockTokens=function(src,tokens,top){tokens=void 0===tokens?[]:tokens;top=void 0===top?!0:top;src=src.replace(/^ +$/gm,"");for(var token,i,l;src;)if(token=this.tokenizer.space(src))src=src.substring(token.raw.length),token.type&&tokens.push(token);else if(token=this.tokenizer.code(src,tokens))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.fences(src))src=src.substring(token.raw.length),
tokens.push(token);else if(token=this.tokenizer.heading(src))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.nptable(src))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.hr(src))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.blockquote(src))src=src.substring(token.raw.length),token.tokens=this.blockTokens(token.text,[],top),tokens.push(token);else if(token=this.tokenizer.list(src)){src=src.substring(token.raw.length);
l=token.items.length;for(i=0;i<l;i++)token.items[i].tokens=this.blockTokens(token.items[i].text,[],!1);tokens.push(token)}else if(token=this.tokenizer.html(src))src=src.substring(token.raw.length),tokens.push(token);else if(top&&(token=this.tokenizer.def(src)))src=src.substring(token.raw.length),this.tokens.links[token.tag]||(this.tokens.links[token.tag]={href:token.href,title:token.title});else if(token=this.tokenizer.table(src))src=src.substring(token.raw.length),tokens.push(token);else if(token=
this.tokenizer.lheading(src))src=src.substring(token.raw.length),tokens.push(token);else if(top&&(token=this.tokenizer.paragraph(src)))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.text(src))src=src.substring(token.raw.length),tokens.push(token);else if(src)if(src="Infinite loop on byte: "+src.charCodeAt(0),this.options.silent){console.error(src);break}else throw Error(src);return tokens};node_modules$marked$src$Lexer$classdecl$var1.prototype.inline=function(tokens){var i,
j,k,l=tokens.length;for(i=0;i<l;i++){var token=tokens[i];switch(token.type){case "paragraph":case "text":case "heading":token.tokens=[];this.inlineTokens(token.text,token.tokens);break;case "table":token.tokens={header:[],cells:[]};var l2=token.header.length;for(j=0;j<l2;j++)token.tokens.header[j]=[],this.inlineTokens(token.header[j],token.tokens.header[j]);l2=token.cells.length;for(j=0;j<l2;j++){var row=token.cells[j];token.tokens.cells[j]=[];for(k=0;k<row.length;k++)token.tokens.cells[j][k]=[],
this.inlineTokens(row[k],token.tokens.cells[j][k])}break;case "blockquote":this.inline(token.tokens);break;case "list":for(l2=token.items.length,j=0;j<l2;j++)this.inline(token.items[j].tokens)}}return tokens};node_modules$marked$src$Lexer$classdecl$var1.prototype.inlineTokens=function(src,tokens,inLink,inRawBlock){tokens=void 0===tokens?[]:tokens;inLink=void 0===inLink?!1:inLink;inRawBlock=void 0===inRawBlock?!1:inRawBlock;for(var token;src;)if(token=this.tokenizer.escape(src))src=src.substring(token.raw.length),
tokens.push(token);else if(token=this.tokenizer.tag(src,inLink,inRawBlock))src=src.substring(token.raw.length),inLink=token.inLink,inRawBlock=token.inRawBlock,tokens.push(token);else if(token=this.tokenizer.link(src))src=src.substring(token.raw.length),"link"===token.type&&(token.tokens=this.inlineTokens(token.text,[],!0,inRawBlock)),tokens.push(token);else if(token=this.tokenizer.reflink(src,this.tokens.links))src=src.substring(token.raw.length),"link"===token.type&&(token.tokens=this.inlineTokens(token.text,
[],!0,inRawBlock)),tokens.push(token);else if(token=this.tokenizer.strong(src))src=src.substring(token.raw.length),token.tokens=this.inlineTokens(token.text,[],inLink,inRawBlock),tokens.push(token);else if(token=this.tokenizer.em(src))src=src.substring(token.raw.length),token.tokens=this.inlineTokens(token.text,[],inLink,inRawBlock),tokens.push(token);else if(token=this.tokenizer.codespan(src))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.br(src))src=src.substring(token.raw.length),
tokens.push(token);else if(token=this.tokenizer.del(src))src=src.substring(token.raw.length),token.tokens=this.inlineTokens(token.text,[],inLink,inRawBlock),tokens.push(token);else if(token=this.tokenizer.autolink(src,mangle))src=src.substring(token.raw.length),tokens.push(token);else if(!inLink&&(token=this.tokenizer.url(src,mangle)))src=src.substring(token.raw.length),tokens.push(token);else if(token=this.tokenizer.inlineText(src,inRawBlock,smartypants))src=src.substring(token.raw.length),tokens.push(token);
else if(src)if(src="Infinite loop on byte: "+src.charCodeAt(0),this.options.silent){console.error(src);break}else throw Error(src);return tokens};$jscomp.global.Object.defineProperties(node_modules$marked$src$Lexer$classdecl$var1,{rules:{configurable:!0,enumerable:!0,get:function(){return{block:block,inline:inline}}}});module.exports=node_modules$marked$src$Lexer$classdecl$var1}
//# sourceMappingURL=module$node_modules$marked$src$Lexer.js.map
