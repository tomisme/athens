{"version":3,"sources":["shadow/remote/runtime/shared.cljc"],"mappings":"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","names":["shadow.remote.runtime.shared/init-state","p__60631","p__60632","map__60633","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","map__60634","shadow.remote.runtime.shared/welcome","state-ref","rid","msg","js/console.log","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","p__60637","p__60638","map__60639","map__60640","shadow.remote.runtime.shared/tool-disconnect","tid","seq__60643","cljs.core/seq","chunk__60645","count__60646","i__60647","map__60653","temp__5735__auto__","cljs.core/chunked-seq?","c__4609__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","map__60655","cljs.core/first","cljs.core/next","on-tool-disconnect","cljs.core/deref","cljs.core/vals","p__60657","map__60658","shadow.remote.runtime.shared/request-supported-ops","runtime","shadow.remote.runtime.api/reply","cljs.core/keys","cljs.core/set","cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic","shadow.remote.runtime.shared/unknown-relay-op","js/console.warn","shadow.remote.runtime.shared/unknown-op","p__60660","p__60661","map__60662","map__60663","shadow.remote.runtime.shared/add-extension*","extensions","state","key","ops","spec","cljs.core/contains?","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","cljs.core/reduce-kv","op-kw","op-handler","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core/assoc-in","p__60666","map__60667","shadow.remote.runtime.shared/add-extension","p__60674","map__60675","shadow.remote.runtime.shared/add-defaults","p1__60669#","p1__60670#","p1__60671#","p1__60672#","p1__60673#","shadow.remote.runtime.shared/del-extension*","ext","cljs.core/not","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4","cljs.core/dissoc","cljs.core.update.cljs$core$IFn$_invoke$arity$4","p__60677","map__60678","shadow.remote.runtime.shared/del-extension","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","p__60680","p__60681","map__60682","map__60683","shadow.remote.runtime.shared/process","op","shadow.remote.runtime.shared/run-on-idle","seq__60686","chunk__60688","count__60689","i__60690","map__60696","map__60698","on-idle"],"sourcesContent":["(ns shadow.remote.runtime.shared\n  (:require\n    [clojure.datafy :as d]\n    [clojure.pprint :refer (pprint)]\n    [shadow.remote.runtime.api :as p]\n    [shadow.remote.runtime.writer :as lw])\n  #?(:clj (:import [java.util UUID])))\n\n(defn init-state []\n  {:extensions {}\n   :ops {}})\n\n(defn welcome\n  [{:keys [state-ref]} {:keys [rid] :as msg}]\n  #?(:cljs (js/console.log \"shadow.remote - runtime-id:\" rid))\n  (swap! state-ref assoc :runtime-id rid))\n\n(defn tool-disconnect\n  [{:keys [state-ref]} {:keys [tid] :as msg}]\n  (doseq [{:keys [on-tool-disconnect]} (-> @state-ref :extensions vals)\n          :when on-tool-disconnect]\n    (on-tool-disconnect tid)))\n\n(defn request-supported-ops\n  [{:keys [state-ref] :as runtime} msg]\n  (p/reply runtime msg\n    {:op :supported-ops\n     :ops (-> (:ops @state-ref)\n              (keys)\n              (set)\n              (disj :welcome :unknown-relay-op :unknown-op :request-supported-ops :tool-disconnect))}))\n\n(defn unknown-relay-op [msg]\n  #?(:cljs (js/console.warn \"unknown-relay-op\" msg)\n     :clj (prn [:unknown-relay-op msg])))\n\n(defn unknown-op [msg]\n  #?(:cljs (js/console.warn \"unknown-op\" msg)\n     :clj (prn [:unknown-relay-op msg])))\n\n(defn add-extension*\n  [{:keys [extensions] :as state} key {:keys [ops] :as spec}]\n  (when (contains? extensions key)\n    (throw (ex-info \"extension already registered\" {:key key :spec spec})))\n\n  (reduce-kv\n    (fn [state op-kw op-handler]\n      (when (get-in state [:ops op-kw])\n        (throw (ex-info \"op already registered\" {:key key :op op-kw})))\n      (assoc-in state [:ops op-kw] op-handler))\n\n    (assoc-in state [:extensions key] spec)\n    ops))\n\n(defn add-extension [{:keys [state-ref]} key spec]\n  (swap! state-ref add-extension* key spec))\n\n(defn add-defaults [{:keys [state-ref] :as runtime}]\n  (add-extension runtime\n    ::defaults\n    {:ops\n     {:welcome #(welcome runtime %)\n      :unknown-relay-op #(unknown-relay-op %)\n      :unknown-op #(unknown-op %)\n      :request-supported-ops #(request-supported-ops runtime %)\n      :tool-disconnect #(tool-disconnect runtime %)}}))\n\n(defn del-extension* [state key]\n  (let [ext (get-in state [:extensions key])]\n    (if-not ext\n      state\n      (reduce-kv\n        (fn [state op-kw op-handler]\n          (update-in state [:ops] dissoc op-kw))\n\n        (update state :extensions dissoc key)\n        (:ops ext)))))\n\n(defn del-extension [{:keys [state-ref]} key]\n  (swap! state-ref del-extension* key))\n\n(defn process [{:keys [state-ref] :as runtime} {:keys [op] :as msg}]\n  (let [state @state-ref\n        op-handler (get-in state [:ops op])]\n    (if-not op-handler\n      (p/reply runtime msg {:op :unknown-op\n                            :msg msg})\n      (op-handler msg))))\n\n(defn run-on-idle [state-ref]\n  (doseq [{:keys [on-idle]} (-> @state-ref :extensions vals)\n          :when on-idle]\n    (on-idle)))"]}