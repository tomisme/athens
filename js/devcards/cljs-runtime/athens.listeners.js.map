{"version":3,"sources":["athens/listeners.cljs"],"mappings":"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","names":["athens.listeners/mouse-down-bullet","e","class-list","cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1","p1__61659#","cljs.core/some","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","start-pos","uid","on-move","athens.listeners/mouse-move-bullet","goog.events/listen","js/window","goog.events.EventType/MOUSEMOVE","athens.listeners/mouse-up-bullet","_","map__61660","cljs.core/deref","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","kind","target-uid","G__61661","re-frame.core/subscribe","and__4174__auto__","G__61663","re-frame.core/dispatch","G__61664","goog.events/unlisten","cX","cY","x","y","closest-child","js/document.elementFromPoint","closest-sibling","closest-child-uid","closest-sibling-uid","closest-uid","or__4185__auto__","closest-kind","G__61665","athens.listeners/mouse-down-block","closest-block","closest-block-header","closest-page-header","closest","G__61666","athens.listeners/mouse-over-bullet","tooltip-uid","G__61668","p1__61667#","G__61669","G__61670","athens.listeners/mouse-down-outside-athena","athena?","G__61671","G__61672","athens.listeners/key-down","key","ctrl","meta","shift","goog.events.KeyCodes/Z","G__61673","G__61674","goog.events.KeyCodes/K","G__61675","goog.events.KeyCodes/G","G__61676","goog.events.KeyCodes/R","G__61677","goog.events.KeyCodes/L","G__61678","athens.listeners/init","goog.events.EventType/MOUSEDOWN","goog.events.EventType/MOUSEOVER","goog.events.EventType/KEYDOWN"],"sourcesContent":["(ns athens.listeners\n  (:require\n    ;;[athens.util :refer [get-day]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [goog.events :as events]\n    [re-frame.core :refer [dispatch subscribe]])\n  (:import\n    (goog.events\n      EventType\n      KeyCodes)))\n\n\n;;; Drag Bullet to Re-order Block\n\n\n(declare mouse-move-bullet mouse-up-bullet)\n\n\n(defn mouse-down-bullet\n  [e]\n  (let [class-list (-> (.. e -target -classList) array-seq)]\n    (when (some #(= \"bullet\" %) class-list)\n      (let [start-pos {:x (.-clientX e)\n                       :y (.-clientY e)}\n            uid (.. e -target -dataset -uid)\n            on-move (mouse-move-bullet start-pos uid)]\n        (events/listen js/window EventType.MOUSEMOVE on-move)\n        (set! (.. e -target -onmouseup) (mouse-up-bullet on-move))))))\n\n\n(defn mouse-up-bullet\n  [on-move]\n  (fn [_]\n    (let [{:keys [uid closest/kind] target-uid :closest/uid} @(subscribe [:drag-bullet])]\n      (when (and uid kind target-uid)\n        (dispatch [:drop-bullet uid target-uid kind]))\n      (dispatch [:drag-bullet nil])\n      ;; FIXME: after the first time `empty` is called, selection stays empty\n      ;;(.. (js/document.getSelection) empty)\n      (events/unlisten js/window EventType.MOUSEMOVE on-move))))\n\n\n(defn mouse-move-bullet\n  \"Must set hidden to true for bullet, otherwise bullet is captured when calling `elementFromPoint`.\n  Closest child always takes precedent over closest sibling, because .block-contents is nested within .block-container.\n  `cljs-oops` provides macros that let you bypass null `when` checks\"\n  [start-pos uid]\n  (fn [e]\n    (let [cX (.-clientX e)\n          cY (.-clientY e)\n          x (- cX (:x start-pos))\n          y (- cY (:y start-pos))]\n      (set! (.. e -target -hidden) true)\n      (let [closest-child   (.. (js/document.elementFromPoint cX cY) (closest \".block-contents\"))\n            closest-sibling (.. (js/document.elementFromPoint cX cY) (closest \".block-container\"))\n            closest-child-uid (when closest-child (.. closest-child -dataset -uid))\n            closest-sibling-uid (when closest-sibling (.. closest-sibling -dataset -uid))\n            ;; nilable\n            closest-uid (or closest-child-uid closest-sibling-uid)\n            ;; nilable\n            closest-kind (cond closest-child-uid   :child\n                               closest-sibling-uid :sibling)]\n        (set! (.. e -target -hidden) false)\n        (dispatch [:drag-bullet\n                   {:x            x\n                    :y            y\n                    :uid          uid\n                    :closest/uid  closest-uid\n                    :closest/kind closest-kind}])))))\n\n\n;;; Turn read block or header into editable on mouse down\n\n\n(defn mouse-down-block\n  [e]\n  ;; Consider refactor if we add more editable targets\n  (let [closest-block (.. e -target (closest \".block-contents\"))\n        closest-block-header (.. e -target (closest \".block-header\"))\n        closest-page-header (.. e -target (closest \".page-header\"))\n        closest (or closest-block closest-block-header closest-page-header)]\n    (when closest\n      (dispatch [:editing/uid (.. closest -dataset -uid)]))))\n\n\n;;; Show tooltip\n\n\n(defn mouse-over-bullet\n  [e]\n  (let [class-list (array-seq (.. e -target -classList))\n        closest (.. e -target (closest \".tooltip\"))\n        uid (.. e -target -dataset -uid)\n        tooltip-uid @(subscribe [:tooltip/uid])]\n    (cond\n      ;; if mouse over bullet, show tooltip\n      (some #(= \"bullet\" %) class-list) (dispatch [:tooltip/uid uid])\n      ;; if mouse over a child of bullet, keep tooltip-uid\n      closest nil\n      ;; if tooltip is already nil, don't overwrite tooltip-uid\n      (nil? tooltip-uid) nil\n      ;; otherwise mouse is no longer over a bullet or tooltip. clear the tooltip-uid\n      :else (dispatch [:tooltip/uid nil]))))\n\n\n;;; Close Athena\n\n\n(defn mouse-down-outside-athena\n  [e]\n  (let [athena? @(subscribe [:athena/open])\n        closest (.. e -target (closest \".athena\"))]\n    (when (and athena? (nil? closest))\n      (dispatch [:athena/toggle]))))\n\n\n;;; Hotkeys\n\n(defn key-down\n  [e]\n  (let [key (.. e -keyCode)\n        ctrl (.. e -ctrlKey)\n        meta (.. e -metaKey)\n        shift (.. e -shiftKey)]\n\n    (cond\n      (and (= key KeyCodes.Z) meta shift)\n      (dispatch [:redo])\n\n      (and (= key KeyCodes.Z) meta)\n      (dispatch [:undo])\n\n      (and (= key KeyCodes.K) meta)\n      (dispatch [:athena/toggle])\n\n      (and (= key KeyCodes.G) ctrl)\n      (dispatch [:devtool/toggle])\n\n      (and (= key KeyCodes.R) ctrl)\n      (dispatch [:right-sidebar/toggle])\n\n      (and (= key KeyCodes.L) ctrl)\n      (dispatch [:left-sidebar/toggle]))))\n\n\n;;; Scroll\n\n(defn init\n  []\n  (events/listen js/window EventType.MOUSEDOWN mouse-down-block)\n  (events/listen js/window EventType.MOUSEDOWN mouse-down-bullet)\n  (events/listen js/window EventType.MOUSEOVER mouse-over-bullet)\n  (events/listen js/window EventType.MOUSEDOWN mouse-down-outside-athena)\n  (events/listen js/window EventType.KEYDOWN key-down))\n\n"]}