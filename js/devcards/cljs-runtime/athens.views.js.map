{"version":3,"sources":["athens/views.cljs"],"mappings":"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","names":["athens.views/about-panel","athens.views/file-cb","e","fr","js/FileReader","file","p1__52303#","G__52304","re-frame.core/dispatch","athens.views/table","nodes","iter__4582__auto__","s__52306","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__52308","cljs.core/chunk-buffer","i__52307","map__52313","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__52305","cljs.core/chunk-rest","map__52333","cljs.core/first","cljs.core/cons","cljs.core/rest","id","bid","title","c-time","e-time","reitit.frontend.easy.href.cljs$core$IFn$_invoke$arity$2","js/Date","athens.views/pages-panel","G__52335","re-frame.core/subscribe","cljs.core/deref","athens.views/home-panel","athens.views/left-sidebar","favorites","G__52355","current-route","G__52356","reitit.frontend.easy.href.cljs$core$IFn$_invoke$arity$1","s__52358","b__52360","i__52359","vec__52362","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","iter__52357","vec__52365","_order","athens.views/alert","errors","G__52368","js/alert","G__52369","athens.views/match-panel","name","G__52370","cljs.core/Keyword","athens.page/main","athens.views/main-panel","G__52371","loading","G__52372","cljs.core/chunk-first"],"sourcesContent":["(ns athens.views\n  (:require\n   [athens.page :as page]\n   [athens.subs]\n   [re-frame.core :as rf :refer [subscribe dispatch]]\n   #_[reitit.frontend :as rfe]\n   [reitit.frontend.easy :as rfee]\n   ))\n\n(defn about-panel []\n  [:div [:h1 \"About Panel\"]])\n\n(defn file-cb [e]\n  (let [fr (js/FileReader.)\n        file (.. e -target -files (item 0))]\n    (set! (.-onload fr) #(dispatch [:parse-datoms (.. % -target -result)]))\n    (.readAsText fr file)))\n\n(defn table\n  [nodes]\n  [:table {:style {:width \"60%\" :margin-top 20}}\n   [:thead\n    [:tr\n     [:th {:style {:text-align \"left\"}} \"Page\"]\n     [:th {:style {:text-align \"left\"}} \"Last Edit\"]\n     [:th {:style {:text-align \"left\"}} \"Created At\"]]]\n   [:tbody\n    (for [{id :db/id\n           bid :block/uid\n           title :node/title\n           c-time :create/time\n           e-time :edit/time} nodes]\n      ^{:key id}\n      [:tr\n       [:td {:style {:height 24}} [:a {:href (rfee/href :page {:id bid})} title]]\n       [:td (.toLocaleString  (js/Date. c-time))]\n       [:td (.toLocaleString  (js/Date. e-time))]\n       ])]])\n\n(defn pages-panel []\n  (let [nodes (subscribe [:pull-nodes])]\n    (fn []\n      [:div\n       [:p \"Upload your DB \" [:a {:href \"\"} \"(tutorial)\"]]\n       [:input {:type \"file\"\n                :name \"file-input\"\n                :on-change (fn [e] (file-cb e))}]\n       [table @nodes]])))\n\n(defn home-panel []\n  (fn []\n    [:div\n     [:h1 \"Home Panel\"]]))\n\n(defn left-sidebar\n  []\n  (fn []\n    (let [favorites (subscribe [:favorites])\n          current-route (subscribe [:current-route])]\n      [:div {:style {:margin \"0 10px\" :max-width 250}}\n       [:div [:a {:href (rfee/href :pages)} \"All /pages\"]]\n       [:div [:span {:style {}} \"Current Route: \" [:b (-> @current-route :path)]]]\n       [:div {:style {:border-bottom \"1px solid gray\" :margin \"10px 0\"}}]\n       [:ol {:style {:padding 0 :margin 0 :list-style-type \"none\"}}\n        (for [[_order title bid] @favorites]\n          ^{:key bid} [:li [:a {:href (rfee/href :page {:id bid})} title]])]\n       ])))\n\n(defn alert\n  \"When `:errors` subscription is updated, global alert will be called with its contents and then cleared.\"\n  []\n  (let [errors (subscribe [:errors])]\n    (when (seq @errors)\n      (js/alert (str @errors))\n      (dispatch [:clear-errors]))))\n\n(defn match-panel [name]\n  [(case name\n     :about about-panel\n     :pages pages-panel\n     :page page/main\n     pages-panel)])\n\n(defn main-panel []\n  (let [current-route (subscribe [:current-route])\n        loading (subscribe [:loading])]\n    (fn []\n      [alert]\n      (if @loading\n        [:h4 \"Loading... (at least it'll be faster than Roam)\"]\n        [:div {:style {:display \"flex\"}}\n         [left-sidebar]\n         [match-panel (-> @current-route :data :name)]]))))\n"]}