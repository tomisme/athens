{
"version":3,
"file":"module$node_modules$marked$src$marked.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/marked/src/marked.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$marked$src$marked\"] = function(global,require,module,exports) {\nconst Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Tokenizer = require('./Tokenizer.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    const highlight = opt.highlight;\n    let tokens,\n      pending,\n      i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    const done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      let out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(extension) {\n  const opts = merge({}, extension);\n  if (extension.renderer) {\n    const renderer = marked.defaults.renderer || new Renderer();\n    for (const prop in extension.renderer) {\n      const prevRenderer = renderer[prop];\n      renderer[prop] = (...args) => {\n        let ret = extension.renderer[prop].apply(renderer, args);\n        if (ret === false) {\n          ret = prevRenderer.apply(renderer, args);\n        }\n        return ret;\n      };\n    }\n    opts.renderer = renderer;\n  }\n  if (extension.tokenizer) {\n    const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n    for (const prop in extension.tokenizer) {\n      const prevTokenizer = tokenizer[prop];\n      tokenizer[prop] = (...args) => {\n        let ret = extension.tokenizer[prop].apply(tokenizer, args);\n        if (ret === false) {\n          ret = prevTokenizer.apply(tokenizer, args);\n        }\n        return ret;\n      };\n    }\n    opts.tokenizer = tokenizer;\n  }\n  marked.setOptions(opts);\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.Tokenizer = Tokenizer;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n\n};"],
"names":["shadow$provide","global","require","module","exports","marked","src","opt","callback","Error","Object","prototype","toString","call","merge","defaults","checkSanitizeDeprecation","highlight","i","tokens","Lexer","lex","e","pending","length","done","err","out","Parser","parse","token","type","text","lang","code","escaped","message","silent","escape","Tokenizer","Renderer","TextRenderer","Slugger","getDefaults","changeDefaults","options","setOptions","marked.setOptions","use","marked.use","extension","opts","renderer","prop","prevRenderer","args","ret","apply","tokenizer","prevTokenizer","parser","lexer"]
}
