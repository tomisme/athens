shadow$provide.module$node_modules$marked$src$marked=function(global,require,module,exports){function marked(src,opt,callback){if("undefined"===typeof src||null===src)throw Error("marked(): input parameter is undefined or null");if("string"!==typeof src)throw Error("marked(): input parameter is of type "+Object.prototype.toString.call(src)+", string expected");if(callback||"function"===typeof opt){callback||(callback=opt,opt=null);opt=merge({},marked.defaults,opt||{});checkSanitizeDeprecation(opt);
var highlight=opt.highlight,i=0;try{var tokens=Lexer.lex(src,opt)}catch(e){return callback(e)}var pending=tokens.length;var done=function(err){if(err)return opt.highlight=highlight,callback(err);try{var out=Parser.parse(tokens,opt)}catch(e$10){err=e$10}opt.highlight=highlight;return err?callback(err):callback(null,out)};if(!highlight||3>highlight.length)return done();delete opt.highlight;if(!pending)return done();for(;i<tokens.length;i++)(function(token){return"code"!==token.type?--pending||done():
highlight(token.text,token.lang,function(err,code){if(err)return done(err);if(null==code||code===token.text)return--pending||done();token.text=code;token.escaped=!0;--pending||done()})})(tokens[i])}else try{return opt=merge({},marked.defaults,opt||{}),checkSanitizeDeprecation(opt),Parser.parse(Lexer.lex(src,opt),opt)}catch(e$11){e$11.message+="\nPlease report this to https://github.com/markedjs/marked.";if((opt||marked.defaults).silent)return"\x3cp\x3eAn error occurred:\x3c/p\x3e\x3cpre\x3e"+escape(e$11.message+
"",!0)+"\x3c/pre\x3e";throw e$11;}}var Lexer=require("module$node_modules$marked$src$Lexer"),Parser=require("module$node_modules$marked$src$Parser"),Tokenizer=require("module$node_modules$marked$src$Tokenizer"),Renderer=require("module$node_modules$marked$src$Renderer");global=require("module$node_modules$marked$src$TextRenderer");exports=require("module$node_modules$marked$src$Slugger");var $jscomp$destructuring$var9=require("module$node_modules$marked$src$helpers"),merge=$jscomp$destructuring$var9.merge,
checkSanitizeDeprecation=$jscomp$destructuring$var9.checkSanitizeDeprecation,escape=$jscomp$destructuring$var9.escape;$jscomp$destructuring$var9=require("module$node_modules$marked$src$defaults");require=$jscomp$destructuring$var9.getDefaults;var changeDefaults=$jscomp$destructuring$var9.changeDefaults;$jscomp$destructuring$var9=$jscomp$destructuring$var9.defaults;marked.options=marked.setOptions=function(opt){merge(marked.defaults,opt);changeDefaults(marked.defaults);return marked};marked.getDefaults=
require;marked.defaults=$jscomp$destructuring$var9;marked.use=function(extension){var opts=merge({},extension);if(extension.renderer){var renderer=marked.defaults.renderer||new Renderer,$jscomp$loop$15={},prop;for(prop in extension.renderer)$jscomp$loop$15.$jscomp$loop$prop$prop$16=prop,$jscomp$loop$15.$jscomp$loop$prop$prevRenderer$17=renderer[$jscomp$loop$15.$jscomp$loop$prop$prop$16],renderer[$jscomp$loop$15.$jscomp$loop$prop$prop$16]=function($jscomp$loop$15){return function(args){for(var $jscomp$restParams=
[],$jscomp$restIndex=0;$jscomp$restIndex<arguments.length;++$jscomp$restIndex)$jscomp$restParams[$jscomp$restIndex-0]=arguments[$jscomp$restIndex];$jscomp$restIndex=extension.renderer[$jscomp$loop$15.$jscomp$loop$prop$prop$16].apply(renderer,$jscomp$restParams);!1===$jscomp$restIndex&&($jscomp$restIndex=$jscomp$loop$15.$jscomp$loop$prop$prevRenderer$17.apply(renderer,$jscomp$restParams));return $jscomp$restIndex}}($jscomp$loop$15),$jscomp$loop$15={$jscomp$loop$prop$prop$16:$jscomp$loop$15.$jscomp$loop$prop$prop$16,
$jscomp$loop$prop$prevRenderer$17:$jscomp$loop$15.$jscomp$loop$prop$prevRenderer$17};opts.renderer=renderer}if(extension.tokenizer){var tokenizer=marked.defaults.tokenizer||new Tokenizer;$jscomp$loop$15={};for(var prop$13 in extension.tokenizer)$jscomp$loop$15.$jscomp$loop$prop$prop$13$19=prop$13,$jscomp$loop$15.$jscomp$loop$prop$prevTokenizer$20=tokenizer[$jscomp$loop$15.$jscomp$loop$prop$prop$13$19],tokenizer[$jscomp$loop$15.$jscomp$loop$prop$prop$13$19]=function($jscomp$loop$18){return function(args){for(var $jscomp$restParams=
[],$jscomp$restIndex=0;$jscomp$restIndex<arguments.length;++$jscomp$restIndex)$jscomp$restParams[$jscomp$restIndex-0]=arguments[$jscomp$restIndex];$jscomp$restIndex=extension.tokenizer[$jscomp$loop$18.$jscomp$loop$prop$prop$13$19].apply(tokenizer,$jscomp$restParams);!1===$jscomp$restIndex&&($jscomp$restIndex=$jscomp$loop$18.$jscomp$loop$prop$prevTokenizer$20.apply(tokenizer,$jscomp$restParams));return $jscomp$restIndex}}($jscomp$loop$15),$jscomp$loop$15={$jscomp$loop$prop$prop$13$19:$jscomp$loop$15.$jscomp$loop$prop$prop$13$19,
$jscomp$loop$prop$prevTokenizer$20:$jscomp$loop$15.$jscomp$loop$prop$prevTokenizer$20};opts.tokenizer=tokenizer}marked.setOptions(opts)};marked.Parser=Parser;marked.parser=Parser.parse;marked.Renderer=Renderer;marked.TextRenderer=global;marked.Lexer=Lexer;marked.lexer=Lexer.lex;marked.Tokenizer=Tokenizer;marked.Slugger=exports;marked.parse=marked;module.exports=marked}
//# sourceMappingURL=module$node_modules$marked$src$marked.js.map
